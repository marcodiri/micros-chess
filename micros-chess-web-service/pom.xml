<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.github.marcodiri</groupId>
    <artifactId>micros-chess-parent</artifactId>
    <version>1.0-SNAPSHOT</version>
    <relativePath>../micros-chess-parent</relativePath>
  </parent>

  <artifactId>micros-chess-web-service</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>micros-chess-web-service</name>

  <properties>
    <spring-boot.version>3.1.2</spring-boot.version>
    <httpclient.version>4.3.4</httpclient.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.github.marcodiri</groupId>
        <artifactId>micros-chess-core</artifactId>
        <version>1.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>io.github.marcodiri</groupId>
        <artifactId>micros-chess-lobby-service-api</artifactId>
        <version>1.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>io.github.marcodiri</groupId>
        <artifactId>micros-chess-game-service-api</artifactId>
        <version>1.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-websocket</artifactId>
        <version>${spring-boot.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
        <version>${spring-boot.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <version>${spring-boot.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
          </exclusion>
        </exclusions>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>io.github.marcodiri</groupId>
      <artifactId>micros-chess-core</artifactId>
    </dependency>
    <dependency>
      <groupId>io.github.marcodiri</groupId>
      <artifactId>micros-chess-lobby-service-api</artifactId>
    </dependency>
    <dependency>
      <groupId>io.github.marcodiri</groupId>
      <artifactId>micros-chess-game-service-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-websocket</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.5.14</version>
    </dependency>

    <dependency>
      <groupId>io.github.marcodiri</groupId>
      <artifactId>micros-chess-common-test</artifactId>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.3.0</version>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>single</goal>
              </goals>
              <configuration>
                <descriptors>
                  <descriptor>src/assembly/jar-with-dependencies.xml</descriptor>
                </descriptors>
                <archive>
                  <manifest>
                    <mainClass>
                      io.github.marcodiri.webservice.WebServiceApplication</mainClass>
                  </manifest>
                </archive>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring-boot.version}</version>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <configuration>
          <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
          <images>
            <image>
              <name>eventstore/eventstore:21.10.0-buster-slim</name>
              <run>
                <network>
                  <mode>custom</mode>
                  <name>micros-chess-network</name>
                  <alias>${eventstore.hostname}</alias>
                </network>
                <ports>
                  <port>1113:1113</port>
                  <port>2113:2113</port>
                </ports>
                <env>
                  <EVENTSTORE_CLUSTER_SIZE>1</EVENTSTORE_CLUSTER_SIZE>
                  <EVENTSTORE_RUN_PROJECTIONS>All</EVENTSTORE_RUN_PROJECTIONS>
                  <EVENTSTORE_START_STANDARD_PROJECTIONS>true</EVENTSTORE_START_STANDARD_PROJECTIONS>
                  <EVENTSTORE_EXT_TCP_PORT>1113</EVENTSTORE_EXT_TCP_PORT>
                  <EVENTSTORE_HTTP_PORT>2113</EVENTSTORE_HTTP_PORT>
                  <EVENTSTORE_INSECURE>true</EVENTSTORE_INSECURE>
                  <EVENTSTORE_ENABLE_EXTERNAL_TCP>true</EVENTSTORE_ENABLE_EXTERNAL_TCP>
                  <EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP>true</EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP>
                </env>
                <wait>
                  <http>
                    <url>http://localhost:2113/web/index.html</url>
                    <method>GET</method>
                    <status>200</status>
                  </http>
                  <!-- <log>\[\"0.0.0.0:2113\"\] IS LEADER</log> -->
                  <time>10000</time>
                </wait>
              </run>
            </image>
            <image>
              <name>micros-chess-web-service</name>
              <build>
                <dockerFile>${project.basedir}/Dockerfile</dockerFile>
                <tags>
                  <tag>latest</tag>
                </tags>
              </build>
              <run>
                <network>
                  <mode>custom</mode>
                  <name>micros-chess-network</name>
                  <alias>webservice</alias>
                </network>
                <ports>
                  <port>8080:8080</port>
                </ports>
                <wait>
                  <http>
                    <!-- Will only work if resources/static/index.html is present -->
                    <url>http://localhost:8080</url>
                    <method>GET</method>
                    <status>200</status>
                  </http>
                  <time>10000</time>
                </wait>
              </run>
            </image>
          </images>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>